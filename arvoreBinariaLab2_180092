class HashTable:
    def __init__(self, size):
        self.size = size
        self.table = [[] for _ in range(size)]

    def hash(self, key):
        return hash(key) % self.size

    def insert(self, key, value):
        index = self.hash(key)
        for item in self.table[index]:
            if item[0] == key:
                item[1] = value
                return
        self.table[index].append((key, value))

    def search(self, key):
        index = self.hash(key)
        for item in self.table[index]:
            if item[0] == key:
                return item[1]
        return None

    def remove(self, key):
        index = self.hash(key)
        for item in self.table[index]:
            if item[0] == key:
                self.table[index].remove(item)
                return

# Exemplo de uso:
hash_table = HashTable(11)
hash_table.insert("Python", "Linguagem de Programação")
hash_table.insert("Java", "Linguagem de Programação")
hash_table.insert("C++", "Linguagem de Programação")

print(hash_table.search("Python"))  # Saída: "Linguagem de Programação"
print(hash_table.search("JavaScript"))  # Saída: None

hash_table.remove("Java")
print(hash_table.search("Java"))  # Saída: None
